
1) installation demos from sandeep:
	IntelMovidius_Demo_StartupGuide_v1.pdf
	IntelNCS2_Demo_guide_v2.pdf

2) use ubuntu 16.04 - this is what Intel supports for Linux.

3) Open Vino Tool Kit URL -

https://docs.openvinotoolkit.org/latest/_docs_install_guides_installing_openvino_linux.html

==========================================================================

IntelMovidius_Demo_StartupGuide_v1.pdf

Let’s Get Started
You will need
1.  An old laptop that is a spare. It will no longer have Windows so backup everything from
that laptop. It will be re purposed as a Linux box.

2.  A 4GB USB stick ( empty ). Make sure that you have backed up all information from that
stick. It will be converted into a bootable Linux USB stick.

3.  A USB Camera if your laptop does not have one.

4.  Intel Movidius stick ( on its way to you ).

5. Time about 8+ hours depending on how proficient you are with Linux.

Important
a.  Your laptop will be converted into a Linux box. You cannot go back to windows ( unless you
know how to setup a dual boot ).
b.  All data on the USB stick will be lost unless you back it up.

Step 1:
Download U buntu 16.04.5 LTS ISO on your laptop
Links : http://mirror.math.princeton.edu/pub/ubuntu iso/16.04.5/

IMPORTANT : Get 16.04.5 LTS only. Intel has tested the current NCSDK against 16.
I used 64 bit download as my laptop supports that ( most recent laptops are all 64 b ).

Step 2: Build a Bootable USB from the ISO file from Windows

Links : https://www.balena.io/etcher/ Install Etcher on your Windows laptop

Insert an empty USB stick, pick the Ubuntu image, point to the USB drive and select flash.

Step 3: Install U buntu 16 on the Test Laptop

1.  Insert the Bootable USB on a port on your test laptop.
2.  Power on the laptop.
3.  Hit F10 or F12 to interrupt boot process.
4.  Pick the “Boot from USB” option.
5.  After you see the boot screen. Select install Ubuntu on the laptop

Important
a.  Do NOT upgrade to Ubuntu 18.04.
b.  Do NOT upgrade to Python 3.7

Step 4: Initial Setup and Test
This is what has worked for me
1.  Uninstall Libreoffice and games
2.  Install pip and pip 3 commands to execute in terminal
• sudo apt install python pip
• sudo apt install python3 pip3
3.  Install OpenCV on python 3 Run the following command in the terminal
• sudo pip 3 install opencv contrib python== 3 4 4 19
4 Test if OpenCV works output on my screen
s@STestBox :~$ python3
Python 3.5.2 (default, Nov 12 2018, 13:43:14)
[GCC 5.4.0 20160609] on linux
Type "help", "copyright", "credits" or "license" for
more information.
>>> import cv2 as cv
>>> print(cv.__version__)
3.4.4
>>> quit()
5.  Install JDK Command to run
• sudo apt get install default jdk
6.  Install Eclipse and pyDev in Eclipse
Check the internet for instructions
7.  Install git Command to run
• sudo apt get install git

Step 5: Install Intel SDK And Examples

This is what has worked for me
Important Make sure the Movidius stick is plugged in

1.  Install NCSDK 2 use 2 and not V 1 Command to run
• git clone b ncsdk2 https://github.com/movidius/ncsdk.git

2.  Install SDK Run the following commands in the ncsdk folder
• install sh
• make install
• make examples

3.  Install ncappzoo
• git clone b ncsdk2 https://github.com/movidius/ncappzoo.git
• Then run the following in the ncappzoo folder
• make all

Step 6: Running the Examples
Important : Make sure the Movidius stick is plugged into the USB port.
1.  Go to the examples directory
2.  Pick a directory and then run the following command
• make run

Demo Of The Benefit Of The Edge

1.  Notice that the CPU usage on my laptop is very low.
2.  Most processing is being done on the Intel Movidius stick.
3.  In this case the model is classifying vehicles on the road. This is
process intensive but for the AI VPU ( and away from the laptop CPU )

Your Accomplishment So Far
1.  Played a little with Platform needed to make this happen. This will help in understanding
the components involved.
• Yes, most of them will translate well to Cloud.
2.  Understanding of the different framework components that come into play.
3.  If you go through the code examples you will get
• Familiarity with Python and some of its libraries and how to use them.
• Familiarity of different frameworks ( Caffee , Tensorflow ).
• How to leverage them, port them to Intel Movidius
• Familiarity of how to bring forward object detection, classification, stream analytics
including video etc.
• Use of Notebooks or Eclipse IDE.
• More importantly this will serve as a mini primer on data science projects.
• Yes, it will give you an idea of what Data Science needs are, why do we have to
standardize, normalize, get the right model, split data into training testing, train the
model, evaluate and then use it.

Important : This is only a start of the journey  . This is your journey. Have fun!

==========================================================================

IntelNCS2_Demo_guide_v2.pdf

Intention Of the Document
Overall
• Be able to build a demo ready AI Platform on the edge.
• Be able to show different use cases of AI technologies.
• Demonstrate the value of processing on the Edge

Technical
• Serve as a Startup Guide for people getting Intel Movidius NC2.
• List steps for solution that has worked (include learnings from the setup)
• One Stop Shop for links that I have used.

NOTE
This is a set of high level steps only.
For more details please refer to the provided links.
Not responsible for data lost on your laptop or the USB stick as you go through the process.
Please backup all your important stuff.

Let’s Get Started

You will need -
1.  An old laptop that is a spare. It will no longer have Windows so backup everything from
that laptop. It will be re purposed as a Linux box.
2.  A 4GB USB stick ( empty ). Make sure that you have backed up all information from that
stick. It will be converted into a bootable Linux USB stick.
3.  A USB Camera if your laptop does not have one.
4.  Intel NCS2.
5. Time about 20+ hours depending on how proficient you are with Linux.

Important
a.  Your laptop will be converted into a Linux box. You cannot go back to windows ( unless you
know how to setup a dual boot ).
b.  All data on the USB stick will be lost unless you back it up.

Step 1:

Download U buntu 16.04.5 LTS ISO on your laptop
Links : http://mirror.math.princeton.edu/pub/ubuntu iso/16.04.5/

IMPORTANT : Get 16.04.5 LTS only. Intel has tested the current NCSDK against 16.
I used 64 bit download as my laptop supports that ( most recent laptops are all 64 b ).

Step 2:

Build a Bootable USB from the ISO file from Windows
Links : https://www.balena.io/etcher/
Install Etcher on your Windows laptop
Insert an empty USB stick, pick the U buntu image, point to the USB drive and select flash.

Step 3:

Install U buntu 16 on the Test Laptop
1.  Insert the Bootable USB on a port on your test laptop.
2.  Power on the laptop.
3.  Hit F10 or F12 to interrupt boot process.
4.  Pick the “Boot from USB” option.
5.  After you see the boot screen. Select install Ubuntu on the laptop

Important
a.  Do NOT upgrade to Ubuntu 18.04.
b.  Do NOT upgrade to Python 3.7

Step 4:
Initial Setup and Test
This is what has worked for me
1.  Uninstall Libreoffice and games
2.  Install pip and pip3 commands to execute in terminal
• sudo apt install python pip
• sudo apt install python3 pip
3.  Install OpenCV on python 3 Run the following command in the terminal
• sudo pip3 install opencv contrib python== 3 4 4 19
4
Test if OpenCV works output on my screen
s@STestBox:~$python3
Python 3.5.2 (default, Nov 12 2018, 13:43:14)
[GCC 5.4.0 20160609] on linux
Type "help", "copyright", "credits" or "license" for
more information.
>>> import cv2 as cv
>>> cv.__version
3.4.4
>>> quit
5.  Install JDK Command to run
• sudo apt get install default jdk
6.  Install Eclipse and pyDev in Eclipse
Check the internet for instructions
7.  Install git Command to run
• sudo apt get install git

Step 5:

Install Intel SDK And Examples
This is what has worked for me
Important Make sure the NCS 2 stick is plugged in
1.  Install OpenVINO from
https://software.intel.com/en-us/neural-compute-stick/get-started
• These worked just fine for me
• NOTE I just used these after the work was already done for the Movidius (V 1 stick
• You may want to test this against a fresh Ubuntu 16 04 install
2.  Make sure to compile all examples
3.  The examples will be in your home directory/directory/……/Release folder as indicated in the instructions
4 Not all examples are designed to run on NCS 2 When you read the instructions you will see a
d MYRIAD” option, if present there is a very good chance the model works if everything is
setup correctly

Step 6:

Running the Examples
Important : Make sure the NCS2 stick is plugged into the USB port.
1.  Go to the “Release” directory
2.  Follow the instructions provided on the run.
3.  If you choose the same Video file you will see a screen similar to the right side.

Video Captures From Runs On My Computer

1.  People ID Counter and Tracker
• I wrote the program in Python just so that I understand the basics of
• How to launch the plugin, load the model and execute it.
• What do results looks like in these cases.
• How do you paint those rectangles and tracker IDs back on the frame.
• Render the video back in near real time.
• Link https:// drive.google.com/open?id=1ODvypgYJUcXSKrW0UR5ff8WvD4nNgjz6
2.  Vehicle counter and tracker.
• Wrote this one as well in Python. Same as above in terms of functionality ( output ) but
leverage a different pre trained model.
• Link https:// drive.google.com/open?id=1luk9x6cl5TGEy4hA7xdmAEs2ZSlrTf s
3.  Human Pose tracker
• Stock example run from Intel’s release folder. You should be able to replicate this one
easy. Video file is from my previous Movidius examples toolkit.
• Link https:// drive.google.com/open?id=1oMKR6Cc5vVYpwRUunX259T_bz78FjUAM

Your Accomplishment So Far: You know how to integrate (few) AI
Models on an Edge device ( Intel NCS2 ). That is Huge!

1.  If you write programs as well then
• Basic understanding of leveraging a model.
• Understanding of the layers / filters / dimensions
• Reading / interpreting the results from an execution of a model.
• Rendering a video back onto the screen.
• Working with live cam frames and processing them.
2.  Working with different models that do the same thing. You will get answers to
• Why and when to use MobileNet versions vs VGG etc
• Why is pre training with the right data set (images) is important?
• Why you can’t use a pre trained model at times on the video you are using for rendering?
• Why some models do not work well for NRT applications?
• Basic understanding through examples of tradeoff between accuracy and latency on models.
3.  Unless you are already aware and have done this at this point you have still not done
• Building a specific model and its related activities ( loss function etc
• Training / Testing / Validation and run in production
• Integrate this into a deployable production solution.
• So Yes, lot’s more fun things to do.

==========================================================================

Sandeep's instructions from his email:

When you install on a fresh laptop - then

1. Copy all files from (existing)  ai-workspace/experiments/NCS2/src to the local src folder.
2. Copy all files from (existing)  ai-workspace/experiments/NCS2/data to the local data folder.
3. Run the following command on the laptop -
Sudo apt install python3-pip redis-server python3-tk python-opencv
sudo pip3 install statsmodels opencv-python scikit-learn pyyaml redis matplotlib imutils dask toolz

4. Install the intel SDK per instructions from Intel
5. Run model_optimizer pre-reqs ( per doc )
6. Run model_downloader for all models and weights

7. Sudo apt install python-opencv
-	This installs all the codecs you need.

8. Sudo apt install redis-server python3-tk

==========================================================================

Installation Instructions -

1) Installing software instructions -

https://docs.openvinotoolkit.org/latest/_docs_install_guides_installing_openvino_linux.html

2) Intel supports the current Linux OS is Ubuntu 18.04.x long-term support (LTS), 64-bit

3) Download Ubuntu 18.04.X ISO from official Ubuntu site. I used the Desk top version.

4) Create bootable Linus USB:

https://tutorials.ubuntu.com/tutorial/tutorial-create-a-usb-stick-on-windows#0

ISO burner -

https://www.balena.io/etcher/

or in Ubunto -

Search for 'create', then choose Startup Disk Creator and proceed. 

5) Install 18.04 on volunteered laptop.

	- power-up
	- escape
	- F9 to boot from USB

proceed with installation. make sure ethernet cable is connected.

english, install ubuntu, next
english, english, continue
normal installation, download updates while installing ubuntu, continue
erase disk and install ubuntu, install now
write changes to disk? continue
where are you? chicago, continue

name: sogatiai
computer name: sogetiai
pick a username: sogetiai
choose a passwd: sogetiai
confirm passwd: sogetiai
require my password to login
continue

wait for installation to complete. then reboot.

login as sogatiai/sogetiai

6) choose icon on lower LHS, enter term on the search entry.
choose xterm.
right-click xterm on the taskbar. select to lock on favorites.

start up an xterm:

8) in the xterm, do:

	$ sudo passwd root
	[sudo] password for sogetai: sogetiai
	Enter new UNIX password: sogetiai
	Retype new UNIX password: sogetiai

6) in the same xterm, do:

	$ su - root
	Password: sogetiai

	$ apt-get update
	$ apt install synaptic
	...
	Do you want to continue? y
	...
	$ apt get net-tools
	...

7) you now have Ubuntu Desktop 18.04 LTS installed as requested by the Intel NCS2 site.

8) Do this from the new lpatop. Select correct version og OpenVino software:

https://software.intel.com/en-us/openvino-toolkit/choose-download

choose Linux:

Minimum System Requirements

For hardware that supports the Intel® Distribution of OpenVINO™ toolkit on Linux, see System Requirements.

Software Requirements

A Linux build environment needs these components:

OpenCV 3.4 or higher
GNU Compiler Collection (GCC)* 3.4 or higher
CMake* 2.8 or higher
Python* 3.5 or higher

==>> use synaptic to install the above packages.

Once done, enter 'exit' to exit root.

Register to download OpenVino software:

download latest version: 2019 R3.1
choose: full package to download

either download directly to new laptop or to a Windows machine and xfer the file 
to the new laptop.

9) install the following:

	$ apt install python
	$ apt install python3
	$ apt install python-pip
	$ apt install python3-pip

10) run these as root:

	# cd to where tar file is at. untar the file
	$ cd /path/to/tarfile
	$ tar xvf l_openvino_toolkit_<VERSION>.tgz
	$ cd l_openvino_toolkit_<VERSION>
	$ ./install_openvino_dependencies.sh 
	$ ./install_GUI.sh	

11) next step is to run this ...

	$ source /opt/intel/openvino/bin/setupvars.sh
	$ cd /opt/intel/openvino/install_dependencies
	$ ./install_NCS_udev_rules.sh

11.1) add setenv script to .bashrc so the NCS2 shell vars are automatically
defined at login. add the following line at the end of the .bashrc.

	source /opt/intel/openvino/bin/setupvars.sh

12) test ...

	$ cd /opt/intel/openvino/deployment_tools/model_optimizer/install_prerequisites/
	$ ./install_prerequisites.sh
	$ cd /opt/intel/openvino/deployment_tools/demo
	$ ./demo_squeezenet_download_convert_run.sh -d MYRIAD
	$ ./demo_security_barrier_camera.sh -d MYRIAD

13) use synaptic to install:
	git
	git-gui
	gitk
	git-doc
	vim-gui-common

14) under root, check out the "zoo" examples ...

	$ mkdir sandbox
	$ git clone https://github.com/movidius/ncappzoo.git

raad the instruction on the gitgub page (see next) and run the test cases.

	https://github.com/movidius/ncappzoo

15)  run ai-source applications -

	$ pip3 install scipy
	$ pip3 install matplotlib
	$ pip3 install plainbox
	$ pip3 install imutils
	$ pip3 install redis
	$ pip3 install statsmodels
	$ pip3 install dask
	$ pip3 install toolz
	$ apt install redis-server

15.1) installing and starting redis server -

https://redis.io/topics/quickstart

16) run AI source scripts

17) can run keras scripts in NCS2. check this site:

https://www.dlology.com/blog/how-to-run-keras-model-on-movidius-neural-compute-stick/


18) install ipython and ipython3 interpreters:

	apt-get install ipython
	apt-get install ipython3

