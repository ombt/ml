reliability_dsn_connect_to_db
description:  connect to Reliability database using an existing DSN.
parameters:  config - data.frame created from reading config file.
returns:  ODBC database connection

reliability_non_dsn_connect_to_db
description: connect to Reliability database using using DB server,
user, password, DB name defined in config file data.frame
parameters:  config - data.frame created from reading config file.
returns:  ODBC database connection

reliability_connect_to_db
description: connects to Reliability database using DSN or non-DSN 
connection method.
parameters:  config - data.frame created from reading config file.
returns:  ODBC database connection

dx_custom_connect_to_db
description: connects to DX database using a custom JDBC class.
parameters:  config - data.frame created from reading config file.
returns:  JDBC database connection

dx_saml_connect_to_db
description: connect DX datanbase using a SAML-based connection. 
parameters:  config - data.frame created from reading config file.
returns:  JDBC database connection

dx_connect_to_db
description: main entry point for connecting to DX database. 
parameters:  config - data.frame created from reading config file.
returns:  JDBC database connection

spark_connect_to_db
description: cpnnect to DX database using Spark
parameters:  config - data.frame created from reading config file.
returns: SPARK database connection 

connect_to_db
description: main entry point to connect to a remote database: 
DX via Athena or DX via Spark.
parameters:  config - data.frame created from reading config file.
returns:  JDBC Athena or SPARK database connection

disconnect_from_db
description: main entry to disconnect from DX database 
parameters: db_conn - database connection object
returns:  nothing

read_test_dates
description: read test dates from a csv file
parameters: filename - name of test dates file
returns: test dates data.frame (see below)

get_test_period
description: generate a test period for algorithm
parameters: number_of_days - number of days for algorithm
modulesn_number_of_days - number of days for healthy 
instrument list.
returns: data frame with test dates. see below.

data.frame(NAME=c("START_DATE", 
                                "END_DATE",
                                "MODULESN_START_DATE",
                                "MODULESN_END_DATE",
                                "HEALTHY_FLAG_DATE"),
                         VALUE=c(format(now-number_of_days, 
                                        test_date_format),
                                 format(now, 
                                        test_date_format),
                                 format(now-modulesn_number_of_days, 
                                        test_date_format),
                                 format(now, 
                                        test_date_format),
                                 format(now-1, 
                                        healthy_date_format)))
read_csv_file
description: read a csv file with sanity checks
parameters: filename - path to CSV file
type_of_file - label for type of file used in errors
returns:  data.frame defined by contents of CSV file. comments

' are allowed and strings are not converted
to factors.
query_subs
description: substitute parameters for variables in query
parameters: query_template - query containing variables with the forma
"<name of variable>".
substitutions - data frame used for substitutions contains
columns which correspond to names and values. the rows
are names after the values in the names column.
value_column_name - name of column containing the values.
returns: query with variables replaced with values from the

substitutions data.frame. some variables may not be
defined using this substitutions data frame.
make_save_to_file
description: create function to save data to a file
parameters: none
returns:  save_to_file function and attached scope

save_to_file
description: function to save data to a file
parameters: data - data to save 
file_name - file path to store data
returns: none

make_error_handler
description: create a function to write error messages to errors.csv
parameters: none
returns:  pseudo-object error handler


handler
description: callback used by try-catch block in case of an error
parameters: emdg -	error message, usually the message used in 
the stop() call.
returns: none

phm_patterns_sk
description: set/get function
parameters: phm_patterns_sk - new value or NA
returns: current value of phm_patterns_sk

occurred
description: set/get function
parameters: occurred - new value or NA
returns: current value of occurred

total_errors
description: set/get function
parameters: total_errors - new value or NA
returns: current value of total_errors

file_name
description: set/get function
parameters: file_name - new value or NA
returns: current value of file_name

make_write_results
description: create a function to write all the records to the results file
parameters: none
returns:  write_results function and scope

write_results
description: write data to results.csv file
parameters: results - data to save 
keep - list of fields to keep. 
returns: none


make_write_data
description: create a function to write data out
parameters: none
returns:  write_data fucntion and scope

write_data
description: function to save data to a file
parameters: data - data to save 
file_name - file path to store data
returns: none

empty_results
description: generate an empty list
parameters: none
returns:  data frame for results.csv with correct columns, but 

with zero rows.
exec_query
description: generate a query and execute it. process results afterwards.
parameters: params - one parameter set from list of parameter sets
in input.csv file.
db_conn - database connection created by connect_to_db()
query_template - query with variables 
test_period - test period data.frame created by 
get_test_period()
returns:  query results set

default_post_flagged_processing
description: default function for processing of flagged query results. 
it does nothing. overwritten by algorithm if necessary.
parameters: flagged_results - query results from flagged query
db_conn - database connection created by connect_to_db()
params - one parameter set from list of parameter sets
in input.csv file.
test_period - test period data.frame created by 
get_test_period()
returns:  flagged results after processing

default_pre_flagged_processing
description: default function for pre-processing of flagged query results. 
it does nothing. overwritten by algorithm if necessary.
parameters: flagged_results - query results from flagged query
db_conn - database connection created by connect_to_db()
params - one parameter set from list of parameter sets
in input.csv file.
test_period - test period data.frame created by 
get_test_period()
returns:  flagged results after processing

default_spark_load_data
description: load parquet files for spark, if needed. default version
 does nothing. is overwritten by algorithm when needed.
parameters: db_conn - database connection created by connect_to_db()
params - one parameter set from list of parameter sets
in input.csv file.
test_period - test period data.frame created by 
get_test_period()
returns:  none

default_generate_suppression
description: default function to generate list of suppressed module SNs.
by default it does nothing. it can be overwritten by
an algorithm.
parameters: params - one parameter set from list of parameter sets
in input.csv file.
rel_db_conn - Reliability database connection
test_period - test period data.frame created by 
get_test_period()
returns: list of suppressed SNs

