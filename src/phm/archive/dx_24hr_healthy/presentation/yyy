usage
Description:  standard usage message
Parameters:  none
Returns:  none
read_test_dates
Description: read test dates from a csv file
Parameters: filename - name of test dates file
Returns: test dates data.frame (see below)
get_test_period
Description: generate a test period for algorithm
Parameters: options - getopts data.frame
 number_of_days - number of days for algorithm
 modulesn_number_of_days - number of days for healthy 
  instrument list.
Returns: data frame with test dates. see below.
 data.frame(NAME=c("START_DATE", 
                                "END_DATE",
                                "MODULESN_START_DATE",
                                "MODULESN_END_DATE",
                                "HEALTHY_FLAG_DATE"),
                         VALUE=c(format(now-number_of_days, 
                                        test_date_format),
                                 format(now, 
                                        test_date_format),
                                 format(now-modulesn_number_of_days, 
                                        test_date_format),
                                 format(now, 
                                        test_date_format),
                                 format(now-1, 
                                        healthy_date_format)))
read_csv_file
Description: read a csv file with sanity checks
Parameters: filename - path to CSV file
 type_of_file - label for type of file used in errors
Returns:  data.frame defined by contents of CSV file. comments
 starting with '#' are allowed and strings are not converted
 to factors.
query_subs
Description: substitute parameters for variables in query
Parameters: query_template - query containing variables with the forma
  "<name of variable>".
 substitutions - data frame used for substitutions contains
  columns which correspond to names and values. the rows
  are names after the values in the names column.
 value_column_name - name of column containing the values.
Returns: query with variables replaced with values from the
 substitutions data.frame. some variables may not be
 defined using this substitutions data frame.
make_save_to_file
Description: create function to save data to a file
Parameters: none
Returns:  save_to_file function and attached scope
save_to_file
Description: function to save data to a file
Parameters: data - data to save 
  file_name - file path to store data
Returns:  none
make_error_handler
Description: create a function to write error messages to errors.csv
Parameters: none
Returns:  pseudo-object error handler
make_error_handler <- function()
handler
Description: callback used by try-catch block in case of an error
Parameters: emdg - error message, usually the message used in 
   the stop() call.
Returns:  none
phm_patterns_sk
Description: set/get function
Parameters: phm_patterns_sk - new value or NA
Returns:  current value of phm_patterns_sk
occurred
Description: set/get function
Parameters: occurred - new value or NA
Returns:  current value of occurred
total_errors
Description: set/get function
Parameters: total_errors - new value or NA
Returns:  current value of total_errors
file_name
Description: set/get function
Parameters: file_name - new value or NA
Returns:  current value of file_name
make_write_results
Description: create a function to write all the records to the results file
Parameters: none
Returns:  write_results function and scope
write_results
Description: write data to results.csv file
Parameters: options - getopts data.frame
   flagged_records - data to save 
  keep - list of fields to keep. 
Returns:  none
make_write_data
Description: create a function to write data out
Parameters: none
Returns:  write_data fucntion and scope
write_data
Description: function to save data to a file
Parameters: data - data to save 
  file_name - file path to store data
  use_col_names - write out column names the second
   and later times the file is accessed.
Returns:  none
empty_results
Description: generate an empty list
Parameters: none
Returns:  data frame for results.csv with correct columns, but 
 with zero rows.
reliability_dsn_connect_to_db
Description:  connect to Reliability database using an existing DSN.
Parameters:  config - data.frame created from reading config file.
Returns:  ODBC database connection
reliability_non_dsn_connect_to_db
Description: connect to Reliability database using using DB server,
 user, password, DB name defined in config file data.frame
Parameters:  config - data.frame created from reading config file.
Returns:  ODBC database connection
reliability_connect_to_db
Description: connects to Reliability database using DSN or non-DSN 
 connection method.
Parameters:  config - data.frame created from reading config file.
Returns:  ODBC database connection
dx_custom_connect_to_db
Description: connects to DX database using a custom JDBC class.
Parameters:  config - data.frame created from reading config file.
Returns:  JDBC database connection
dx_saml_connect_to_db
Description: connect DX datanbase using a SAML-based connection. 
Parameters:  config - data.frame created from reading config file.
Returns:  JDBC database connection
dx_linux_saml_connect_to_db
Description: connect DX datanbase using a SAML-based connection. 
Parameters:  config - data.frame created from reading config file.
Returns:  JDBC database connection
dx_connect_to_db
Description: main entry point for connecting to DX database. 
Parameters:  config - data.frame created from reading config file.
Returns:  JDBC database connection
ida_connect_to_db
Description: main entry point for connecting to IDA database. 
Parameters:  config - data.frame created from reading config file.
Returns:  JDBC database connection
spark_connect_to_db
Description: cpnnect to DX database using Spark
Parameters:  config - data.frame created from reading config file.
Returns: SPARK database connection 
connect_to_db
Description: main entry point to connect to a remote database: 
 DX via Athena or DX via Spark.
Parameters: options - getopts data.frame
Returns:  JDBC Athena or SPARK database connection, or IDA JDBC connection
disconnect_from_db
Description: main entry to disconnect from DX database 
Parameters: db_conn - database connection object
  options - getopts data.frame
Returns:  nothing
exec_query
Description: generate a query and execute it. process results afterwards.
Parameters: params - one parameter set from list of parameter sets
  in input.csv file.
 db_conn - database connection created by connect_to_db()
 query_template - query with variables 
  options - getopts data.frame
 test_period - test period data.frame created by 
  get_test_period()
Returns:  query results set
default_post_flagged_processing
Description: default function for processing of flagged query results. 
 it does nothing. overwritten by algorithm if necessary.
Parameters: flagged_results - query results from flagged query
 db_conn - database connection created by connect_to_db()
 params - one parameter set from list of parameter sets
  in input.csv file.
  options - getopts data.frame
 test_period - test period data.frame created by 
  get_test_period()
Returns:  flagged results after processing
process_results
Description: process the results of the queries
Parameters: params - one parameter set from list of parameter sets
  in input.csv file.
 db_conn - database connection created by connect_to_db()
 flagged_results - flagged query data results
 modulesn_results - 24-hour healthy query data results
 chart_data_results - chart data query data results
  options - getopts data.frame
 test_period - test period data.frame created by 
  get_test_period()
Returns:  flagged results after processing
run_algorithm
Description: run algorithm for a set of parameters
Parameters: params - one parameter set from list of parameter sets
  in input.csv file.
 db_conn - database connection created by connect_to_db()
 flagged_query_template - flagged query 
 modulesn_query_template - 24-hour healthy query 
 chart_data_query_template - chart data query 
  options - getopts data.frame
 test_period - test period data.frame created by 
  get_test_period()
Returns:  flagged results after processing
default_spark_load_data
Description: load parquet files for spark, if needed. default version
  does nothing. is overwritten by algorithm when needed.
Parameters: db_conn - database connection created by connect_to_db()
 params - one parameter set from list of parameter sets
  in input.csv file.
 test_period - test period data.frame created by 
  get_test_period()
Returns:  none
default_generate_suppression
Description: default function to generate list of suppressed module SNs.
 by default it does nothing. it can be overwritten by
 an algorithm.
Parameters: params - one parameter set from list of parameter sets
  in input.csv file.
 rel_db_conn - Reliability database connection
 test_period - test period data.frame created by 
  get_test_period()
Returns: list of suppressed SNs
run_group_algorithm
Description: run algorithm for all sets of parameters
Parameters: params - all parameter sets from input.csv file.
  options - getopts data.frame
 test_period - test period data.frame created by 
  get_test_period()
 flagged_query_template - flagged query 
 modulesn_query_template - 24-hour healthy query 
 chart_data_query_template - chart data query 
Returns:  none
real_main
Description: main entry point to algorithms
Parameters: config_type - type of connection
  number_of_days - number of days used by algorithm
 flagged_query_template - flagged query 
 modulesn_query_template - 24-hour healthy query 
 chart_data_query_template - chart data query 
 product_line_code - default product line code, could 
  be NA
Returns:  none
main
Description: main entry point to R script
Parameters: number_of_days - number of days used by algorithm
 flagged_query_template - flagged query 
 modulesn_query_template - 24-hour healthy query 
 chart_data_query_template - chart data query 
 product_line_code - default product line code, could 
  be NA
 config_type - type of connection
Returns:  none
