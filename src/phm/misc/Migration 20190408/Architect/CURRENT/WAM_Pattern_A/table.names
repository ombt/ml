ODS procedure:
    svc_phm_owner.phm_ods_wam_proc

IDA tables:
    idaowner.idamoduleinformation

    svc_phm_ods.phm_ods_washaspirations

    svc_phm_owner.phm_algorithm_routines
    svc_phm_owner.phm_patterns
    svc_phm_owner.phm_product_family
    svc_phm_owner.phm_threshold_parameter
    svc_phm_owner.phm_alg_output
    svc_phm_owner.phm_wam_output_1
    svc_phm_owner.phm_wam_alg_chart_output

raw data input:
    svc_phm_ods.phm_ods_washaspirations

algorithm input:
    idaowner.idamoduleinformation
    svc_phm_owner.phm_algorithm_routines
    svc_phm_owner.phm_patterns
    svc_phm_owner.phm_product_family
    svc_phm_owner.phm_threshold_parameter

generated data output:
    svc_phm_owner.phm_alg_output
    svc_phm_owner.phm_wam_output_1
    svc_phm_owner.phm_wam_alg_chart_output

stored procedure:

create or replace 
procedure svc_phm_owner.phm_wam_a(v_alg_num number,
                                  v_run_date date,
                                  v_batch_num varchar2, 
                                  v_unix_id varchar2)
is

cursor device_stats (v_modulesndrm varchar2,
                     v_start_date date,
                     v_end_date date)
is
    select 
        deviceid,
        modulesndrm,
        trunc(eventdate) dt,
        washzoneid  wz_id 
    from 
        svc_phm_ods.phm_ods_washaspirations
    where     
        eventdate between 
            v_start_date 
        and 
            v_end_date 
    and 
        modulesndrm = v_modulesndrm  
    and 
        eventdate >= trunc(v_run_date-1)
    group by 
        deviceid,
        modulesndrm,
        trunc(eventdate),
        washzoneid
    order by 3,4;

cursor device_and_date_list
is
    select 
        ods.deviceid,
        ods.modulesndrm,
        trunc(min(ods.eventdate)) start_date, 
        max(eventdate) end_date,
        ia.countryname,
        ia.arearegion,
        ia.customername,
        ia.customernumber,
        ia.moduletype
    from 
        phm_ods_washaspirations ods,
        idaowner.idamoduleinformation ia
    where 
        ods.batch_num = v_batch_num 
    and       
        ods.run_date = v_run_date 
    and 
        ods.modulesndrm = ia.modulesn 
    --and ods.modulesndrm = 'isr51878'
    and ia.createdate = (
        select 
            max(createdate) 
        from 
            idaowner.idamoduleinformation 
        where 
            modulesn = ia.modulesn 
        and
            createdate <= sysdate 
        and 
            productline<>'xxx')
    and 
        ods.eventdate >= ia.effectivefromdate 
    and 
        ods.eventdate <= ia.effectivetodate 
    and 
        ia.area is not null 
    and
        ia.customername not like '%abbott%' 
    and  
        ia.customername not like '%flextronics%'
    group by  
        ods.deviceid,
        ods.modulesndrm,
        ia.countryname,
        ia.arearegion,
        ia.customername,
        ia.customernumber,
        ia.moduletype 
    order by 1,2,3;

cursor cur_ihn3_msg
is
    select  
        sn,
        flagdate,
        count(*) cnt
    from (
        select distinct 
            country, 
            region, 
            customer, 
            sn, 
            wzprobe, 
            trunc(flagdate) flagdate, 
            flaga,

            customernumber,  
            ihn_level3_desc, 
            trunc(date_created) date_created
        from 
            phm_wam_output_1 
        where 
            batch_num=v_batch_num 
        and  
            phm_patterns_sk = v_alg_num 
        and 
            trunc(date_created)=trunc(sysdate)
        ) wam_output
    where  
        flaga = 'yes' 
    and 
        trunc(date_created)=trunc(sysdate) 
    -- or flagb = 'yes' or  flagc = 'yes' )
    group by 
        sn,flagdate
    order by 1,2;

cursor cur_alg_output 
is
    select 
        *
    from (
        select distinct 
            customername as customer, 
            customernumber, 
            sn, 
            phm_product_line_code as pl, 
            country, 
            region, 
            phm_algorithm_definitions_sk, 
            phm_thresholds_sk,
            flagdate flagdate, 
            flaga, 
            ihn_level3_desc, 
            created_by,  
            date_created, 
            product_line, 
            batch_num, 
            phm_patterns_sk,
            rank() over (
                partition by 
                    batch_num, 
                    sn, 
                    trunc(flagdate), 
                    phm_patterns_sk 
                order by 
                    flaga desc, 
                    flagdate asc
            ) rank
        from (
            select distinct 
                customer customername, 
                customernumber, 
                sn, 
                phm_product_line_code, 
                country, 
                region, 
                phm_algorithm_definitions_sk, 
                phm_thresholds_sk,
                flagdate flagdate, 
                flaga, 
                ihn_level3_desc, 
                created_by, 
                trunc(date_created) date_created, 
                product_line, 
                batch_num, 
                phm_patterns_sk
            from 
                phm_wam_output_1 
            where 
                batch_num= v_batch_num 
            and  
                phm_patterns_sk = v_alg_num 
            and 
                trunc(date_created)=trunc(sysdate))
        )
    where 
        rank=1;


vcountry    idaowner.idamoduleinformation.countryname%type ;
vcity       idaowner.idamoduleinformation.city%type ;
vcustname   idaowner.idamoduleinformation.customername%type ;
vcust_num   idaowner.idamoduleinformation.customernumber%type ;
vtype       idaowner.idamoduleinformation.moduletype%type ;

v_flag               varchar(5);
num_days             number(2);
v_flag_date          date;
ihn3_msg             varchar2(50);
mtype                varchar2(50);
wz_sum               varchar2(50);
wz                   varchar2(50);
prb                  varchar2(50);
v_ocur_count         number(10);
v_consec_count       number(10);
valgname             varchar(25);
v_error_message      varchar(2000);
v_ihn4_call_message  varchar(150);
v_device_value       number(15,7);
vmax_threshold_unit  number(3);
v_process_type       varchar(25);
v_process_status     varchar2(25) := 'started';
v_process_id         number(15);
v_prod_family        varchar2(25);
v_run_mode           varchar2(10);
v_routine_name       varchar(35);
v_routine_type       varchar(35);
v_alg_type           varchar2(10);
v_insert_count       number(25);
v_pat_sk_a           phm_patterns.phm_patterns_sk%type;
v_pat_name_a         phm_patterns.pattern_name%type;
v_threshold_sk_a     phm_thresholds.phm_thresholds_sk%type := -1;
v_threshold_number_a phm_thresholds.threshold_number%type;
v_threshold_temp     number(10);
v_occured_count      number(10);
v_alg_sk             number(10) ;
v_date               date;
v_flagged_pl         varchar2(10);
v_flagged_exp_code   varchar2(10);

v_exclude_string1 varchar2(50) := '''%abbott%''';
v_exclude_string2 varchar2(50) := '''%flextronics%''';
v_exclude_string3 varchar2(50) := '''xxx''';
insert_string     varchar2(10000);
v_run_date_str    varchar2(50);
v_pid             varchar2(10);


cursor wam_a_query
is
    select  
        wam.country,    
        wam.arearegion,    
        wam.customer,    
        wam.customernumber,    
        wam.sn, 
        wam.pl,   
        wam.wzprobe,    
        wam.flagdate, 
        wam.device_value,
        wam.flaga,   
        '' as ihn_level3_desc,    
        sysdate
    from (
        select 
            abc.country,  
            abc.arearegion,  
            abc.customer, 
            abc.customernumber, 
            abc.sn, 
            abc.pl, 
            abc.wzprobe,
            (
                select distinct 
                    dm.module_type 
                from 
                    idamart.d_module dm 
                where 
                    abc.sn=dm.module_sn
            ) as module_type,
            abc.flagdatea as flagdate,  
            abc.device_value as device_value, 
            abc.flaga
        from (
            select  
                a.country as country, 
                a.arearegion as arearegion,  
                a.customer_name as customer, 
                a.customernumber   as customernumber, 
                a.sn  as sn, 
                a.pl as pl,
                a.wzprobea as wzprobe,
                a.flagdatea as flagdatea, 
                a.maxtemp as device_value, 
                case when a.flaga = 'yes'  
                     then 'yes'  
                     else 'no' end   as flaga
            from (
                select  
                    rawa.country,  
                    rawa.arearegion,  
                    rawa.customer_name,   
                    rawa.customernumber,
                    rawa.sn, 
                    rawa.pl, 
                    rawa.wzprobe as wzprobea, 
                    rawa.flaga as flaga, 
                    rawa.flagdatea as flagdatea, 
                    rawa.maxtemp
                from (
                    select 
                        ia.productline as pl, 
                        ia.area,ia.
                        countryname country,
                        ia.arearegion,
                        ia.customername as customer_name,
                        ia.customernumber customernumber,

                        wza.modulesndrm as sn,
                        wza.washzoneid || '.' || wza.position as wzprobe,
                        wza.eventdate as flagdatea,
                        wza.maxtemp as maxtemp,
                        case when 
                                 wza.maxtemp > v_threshold_temp 
                             and
                                 lag (wza.maxtemp) over (
                                     partition by 
                                         wza.modulesndrm, 
                                         wza.washzoneid, 
                                         wza.position 
                                     order by wza.eventdate
                                 ) > v_threshold_temp 
                             and
                                 lag (wza.maxtemp, 2) over (
                                     partition by 
                                         wza.modulesndrm, 
                                         wza.washzoneid, 
                                         wza.position 
                                     order by wza.eventdate
                                 ) > v_threshold_temp 
                             and
                                 lag (wza.maxtemp, 3) over (
                                     partition by 
                                         wza.modulesndrm, 
                                         wza.washzoneid, 
                                         wza.position 
                                     order by wza.eventdate
                                 ) > v_threshold_temp 
                             and
                                 lag (wza.maxtemp, 4) over (
                                     partition by 
                                         wza.modulesndrm, 
                                         wza.washzoneid, 
                                         wza.position 
                                     order by wza.eventdate
                                 ) > v_threshold_temp
                             then 'yes'  
                             else 'no' 
                             end as flaga
                    from ( 
                        select 
                            wa.modulesndrm,
                            wa.eventdate,  
                            wa.washzoneid - 1 as washzoneid,
                            '1' as position,
                            wa.position1 as replicateid,
                            case when 
                                     wa.position1 = lag (wa.position1) over 
                                     (
                                         order by 
                                             wa.modulesndrm, 
                                             wa.position1, 
                                             wa.washzoneid, 
                                             wa.eventdate
                                     )
                                 and
                                     wa.washzoneid = lag (wa.washzoneid) over 
                                     (
                                         order by 
                                             wa.modulesndrm, 
                                             wa.position1, 
                                             wa.washzoneid, 
                                             wa.eventdate
                                     ) 
                                 and
                                     wa.eventdate - 10 /(24*60*60) < lag (wa.eventdate) over 
                                     (
                                         order by 
                                             wa.modulesndrm, 
                                             wa.position1, 
                                             wa.washzoneid, 
                                             wa.eventdate
                                     )
                                 then 'probe 1 second temp'
                                 else 'probe 1 first temp' 
                                 end
                            as pip_order,
                            wa.maxtempposition1/1000 maxtemp
                        from 
                            phm_ods_washaspirations wa
                        where  
                            wa.position1 > 0 
                        and 
                            wa.eventdate >= trunc(sysdate - 1) 
                        and 
                            wa.eventdate < trunc(sysdate)
                        and 
                            wa.modulesndrm in (
                                select distinct 
                                    modulesndrm 
                                from 
                                    phm_ods_washaspirations 
                                where 
                                    batch_num=v_batch_num 
                                and 
                                    eventdate >= trunc(sysdate - 1) 
                                and 
                                    eventdate < trunc(sysdate)
                            )
                        union all
                        select 
                            wa.modulesndrm,
                            wa.eventdate, 
                            wa.washzoneid - 1 as washzoneid, 
                            '2' as position,
                            wa.position2 as replicateid,
                            'probe 2' as pip_order, 
                            wa.maxtempposition2/1000 maxtemp
                        from  
                            phm_ods_washaspirations wa
                        where 
                            wa.position2 > 0 
                        and 
                            wa.eventdate >= trunc(sysdate - 1) 
                        and 
                            wa.eventdate < trunc(sysdate)
                        and 
                            wa.modulesndrm in (
                                select distinct 
                                    modulesndrm 
                                from 
                                    phm_ods_washaspirations 
                                where 
                                    batch_num=v_batch_num 
                                and 
                                    eventdate >= trunc(sysdate - 1) 
                                and 
                                    eventdate < trunc(sysdate)
                            )
                        union all
                        select 
                            wa.modulesndrm,
                            wa.eventdate,  
                            wa.washzoneid - 1 as washzoneid,
                            '3' as position,
                            wa.position3 as replicateid,
                            case when 
                                     wa.position3 = lag (wa.position3) over 
                                     (
                                         order by 
                                             wa.modulesndrm, 
                                             wa.position3, 
                                             wa.washzoneid, 
                                             wa.eventdate
                                     ) 
                                 and
                                     wa.washzoneid = lag (wa.washzoneid) over 
                                     (
                                         order by 
                                             wa.modulesndrm, 
                                             wa.position3, 
                                             wa.washzoneid, 
                                             wa.eventdate
                                     ) 
                                 and
                                     wa.eventdate - 10 /(24*60*60) < lag (wa.eventdate) over
                                     (
                                         order by 
                                             wa.modulesndrm, 
                                             wa.position3, 
                                             wa.washzoneid, 
                                             wa.eventdate
                                     )
                                 then 'probe 3 second temp' 
                                 else 'probe 3 first temp' 
                                 end as pip_order, 
                                 wa.maxtempposition3/1000 maxtemp
                        from 
                            phm_ods_washaspirations wa
                        where 
                            wa.position3 > 0 
                        and 
                            wa.eventdate >= trunc(sysdate - 1) 
                        and 
                            wa.eventdate < trunc(sysdate)
                        and 
                            wa.modulesndrm in (
                                select distinct 
                                    modulesndrm 
                                from 
                                    phm_ods_washaspirations 
                                where 
                                    batch_num=v_batch_num 
                                and 
                                    eventdate >= trunc(sysdate - 1) 
                                and 
                                    eventdate < trunc(sysdate)
                            )
                         ) wza 
                    inner join 
                        idaowner.idamoduleinformation ia
                    on  
                        wza.modulesndrm = ia.modulesn 
                    and
                        ia.createdate = ( 
                            select 
                                max(createdate) 
                            from 
                                idaowner.idamoduleinformation 
                            where 
                                modulesn = ia.modulesn 
                            and 
                                createdate <= sysdate)
                    and
                        wza.eventdate > ia.effectivefromdate 
                    and   
                        wza.eventdate < ia.effectivetodate
                    where 
                        not wza.pip_order = 'probe 3 second temp' 
                    and 
                        not wza.pip_order = 'probe 1 first temp' 
                    and
                        ia.area is not null 
                    and 
                        ia.customername not like '%abbott%' 
                    and 
                        ia.customername not like '%flextronics%'   
                ) rawa
            ) a
        ) abc
    ) wam;

begin
    /* to get all teh basic info for teh algorithm number provided */
    -- phm_algorithm_utilities_1.phm_get_alg_details(v_alg_num, valgname,v_process_type,v_routine_name,v_run_mode,v_prod_family);
    v_process_id := phm_algorithm_utilities_1.phm_get_process_id();

    select 
        ar.routine_name, 
        ar.routine_type,
        ar.run_mode,
        ar.routine_invoke_command,
        pf.product_family_name
    into 
        valgname,
        v_process_type,
        v_run_mode ,
        v_routine_name,
        v_prod_family
    from 
        phm_algorithm_routines ar,
        phm_patterns pp , 
        phm_product_family pf
    where 
        ar.phm_patterns_sk = v_alg_num   
    and 
        pp.phm_patterns_sk = ar.phm_patterns_sk
    and 
        pp.phm_prod_family_sk = pf.phm_prod_family_sk  
    and 
        nvl(pp.delete_flag,'n') <> 'y';

    begin
        select 
            phm_algorithm_definitions_sk  
        into 
            v_alg_sk from phm_patterns
        where 
            phm_patterns_sk= v_alg_num ;
    exception
        when others 
        then
            v_error_message := ' unable to get patterna information :'||valgname||', error :'|| sqlerrm;
            phm_algorithm_utilities_1.phm_process_audit_log(v_process_id,
                                                            v_prod_family,
                                                            v_process_type,
                                                            v_routine_type,
                                                            valgname||'1',
                                                            v_routine_name,
                                                            v_run_mode,
                                                            v_process_status,
                                                            v_error_message,
                                                            v_run_date ,
                                                            sysdate,
                                                            v_batch_num ,
                                                            v_unix_id,
                                                            v_alg_num );
    commit;
end;

for i in ( 
    select 
        parameter_values,
        parameter_name,
        phm_patterns_sk 
    from 
        phm_threshold_parameter
    where 
        phm_patterns_sk = v_alg_num  
    and 
        nvl(delete_flag,'n') <> 'y'
    )
loop
    if i.parameter_name = 'error_code_value' 
    then 
        v_threshold_temp  :=  i.parameter_values;  
    end if;
    if i.parameter_name = 'thresholds_count' 
    then 
        v_occured_count   :=  i.parameter_values;  
    end if;

end loop;

dbms_output.put_line(v_threshold_temp||'    '||v_occured_count);

if valgname is not null 
then
    dbms_output.put_line('started '||to_char(sysdate,'hh:mi:ss'));
    begin
        delete from 
            phm_alg_output 
        where 
            phm_algorithm_definitions_sk = v_alg_sk 
        and 
            batch_num = v_batch_num 
        and 
            phm_patterns_sk in (v_alg_num);

        --delete from phm_wam_output_1 where phm_algorithm_definitions_sk = v_alg_sk and batch_num = v_batch_num and phm_patterns_sk in (v_alg_num);

        --delete from phm_wam_alg_chart_output where phm_algorithm_definitions_sk = v_alg_sk and batch_num = v_batch_num and phm_patterns_sk in (v_alg_num);

        commit;

        dbms_output.put_line('old data deleted'||to_char(sysdate,'hh:mi:ss'));

        exception
            when others 
            then /* to catch all exceptions while deleting the data */
                --v_process_status := 'errored';
                v_error_message := 'not able to delete the data of previous run for run_date '||v_run_date||' for batch_num ' ||v_batch_num ||' due to  : '||sqlerrm;
                phm_algorithm_utilities_1.phm_algorithm_runlog (v_process_id,v_alg_num,v_run_date,v_batch_num,v_error_message,valgname);
           end;

        begin
            execute immediate 'alter table phm_wam_alg_chart_output truncate subpartition '||v_batch_num||valgname||' drop storage update indexes';
            execute immediate 'alter table phm_wam_output_1 truncate subpartition '||v_batch_num||valgname||' drop storage update indexes';
            exception
                when others 
                then /* to catch all exceptions while deleting the data */
                    v_process_status := 'errored';
                    dbms_output.put_line('alter table phm_wam_alg_chart_output truncate subpartition '||v_batch_num||valgname||' drop storage update indexes');
                    v_error_message := 'not able to delete the data of previous run for run_date '||v_run_date||' for batch_num ' ||v_batch_num ||' due to  : '||sqlerrm;
                    phm_algorithm_utilities_1.phm_algorithm_runlog (v_process_id,
                                                                    v_alg_num,
                                                                    v_run_date,
                                                                    v_batch_num,
                                                                    v_error_message,
                                                                    valgname);
        end;

        dbms_output.put_line('old data truncated'||to_char(sysdate,'hh:mi:ss'));
    
        if v_process_status <>  'errored' 
        then
            v_process_status := 'started'; /* to insert audit records as process started */
            phm_algorithm_utilities_1.phm_process_audit_log(v_process_id,
                                                            v_prod_family,
                                                            v_process_type,
                                                            v_routine_type,
                                                            valgname,
                                                            v_routine_name,
                                                            v_run_mode,
                                                            v_process_status,
                                                            v_error_message,
                                                            v_run_date ,
                                                            sysdate,
                                                            v_batch_num ,
                                                            v_unix_id ,
                                                            v_alg_num);

            for f in  wam_a_query
            loop
                insert into phm_wam_output_1
                (
                    customer, 
                    customernumber, 
                    device_id, 
                    sn, 
                    country, 
                    region, 
                    phm_algorithm_definitions_sk, 
                    phm_thresholds_sk, 
                    flagdate , 
                    device_value, 
                    wzprobe, 
                    flaga, 
                    ihn_level3_desc, 
                    remarks, 
                    created_by, 
                    date_created, 
                    product_line, 
                    batch_num, 
                    phm_patterns_sk, 
                    phm_product_line_code
                ) 
                values 
                (
                    f.customer, 
                    f.customernumber, 
                    null, 
                    f.sn, 
                    f.country, 
                    f.arearegion, 
                    v_alg_sk, 
                    v_threshold_sk_a, 
                    f.flagdate, 
                    f.device_value, 
                    f.wzprobe, 
                    f.flaga, 
                    v_ihn4_call_message, 
                    null, 
                    valgname, 
                    sysdate, 
                    null, 
                    v_batch_num, 
                    v_alg_num, 
                    f.pl
                );
                                        
                v_insert_count := v_insert_count + 1;

                if mod(v_insert_count,10000) = 0 
                then 
                    commit; 
                end if;
            end loop;
        end if;

        commit;

        dbms_output.put_line('main done '||to_char(sysdate,'hh:mi:ss'));

        for x in cur_ihn3_msg
        loop
            begin
                ihn3_msg := '';
                if x.cnt = 1 then
                begin
                    select 
                        nvl(substr(w.wzprobe,1,1),'na'), 
                        nvl(substr(w.wzprobe,3,1),'na'), 
                        case when w.phm_product_line_code = '117' 
                             then 
                                 'i1sr' 
                             when w.phm_product_line_code = '116' 
                             then
                                 'i2sr'
                             when w.phm_product_line_code = '115' 
                             then 
                                 'i2' 
                             end into wz, 
                        prb, 
                        mtype
                    from 
                        phm_wam_output_1 w
                    where 
                        w.wzprobe is not null 
                    and  
                        phm_patterns_sk = v_alg_num 
                    and 
                        w.flaga = 'yes' 
                    and 
                        w.sn = x.sn
                    and 
                        w.batch_num = v_batch_num 
                    and 
                        trunc(w.flagdate) = trunc(x.flagdate) 
                    and 
                        rownum < 2;

                    if mtype = 'i1sr' 
                    then
                        wz := '';
                        ihn3_msg := 'wam1 ' || mtype || ' wz' || wz || ' p' || prb;
                    else
                        ihn3_msg := 'wam1 ' || 'wz' || wz ||' p'||substr(prb,1,1);
                    end if;

                    update 
                        phm_wam_output_1 
                    set 
                        ihn_level3_desc = ihn3_msg  
                    where 
                        sn = x.sn 
                    and 
                        trunc(flagdate) = trunc(x.flagdate)
                    and  
                        phm_patterns_sk = v_alg_num  
                    and 
                        batch_num = v_batch_num  
                    and 
                        ( flaga = 'yes' );

                    exception
                    when others then
                        v_process_status := 'errored';
                        v_error_message := 'not able to update phm_wam_output_1 for sn '||x.sn|| ' for date '||v_date||null||' for the batch_num ' || v_batch_num||', run_date ' ||v_run_date ||'- due to ' || sqlerrm;
                        dbms_output.put_line(v_error_message);

                    phm_algorithm_utilities_1.phm_process_audit_log(v_process_id,
                                                                    v_prod_family,
                                                                    v_process_type,
                                                                    v_routine_type,
                                                                    valgname||'1',v_routine_name,
                                                                    v_run_mode,
                                                                    v_process_status,
                                                                    v_error_message,
                                                                    v_run_date ,
                                                                    sysdate,
                                                                    v_batch_num ,
                                                                    v_unix_id,
                                                                    v_alg_num );

                    end;
                else
                   wz_sum := '';

                begin
                    select 
                        case when w.phm_product_line_code = '117' 
                             then 'i1sr' 
                             when w.phm_product_line_code = '116' 
                             then 'i2sr'
                             when w.phm_product_line_code = '115' 
                             then 'i2' end 
                        into mtype
                    from 
                        phm_wam_output_1 w
                    where 
                        wzprobe is not null 
                    and 
                        phm_patterns_sk = v_alg_num 
                    and 
                        w.flaga='yes' 
                    and 
                        w.sn = x.sn
                    and 
                        w.batch_num = v_batch_num 
                    and 
                        trunc(w.flagdate) =trunc(x.flagdate) 
                    and 
                        rownum <2;

                    ihn3_msg := 'wam1 ' || mtype || ' wz multi probe';

                    update
                        phm_wam_output_1 
                    set 
                        ihn_level3_desc =  ihn3_msg 
                    where  
                        sn = x.sn 
                    and
                        trunc(flagdate) = trunc(x.flagdate)
                    and  
                        hm_patterns_sk = v_alg_num  
                    and 
                        atch_num = v_batch_num  
                    and 
                        ( flaga = 'yes');

                    exception
                    when others 
                    then
                        v_process_status := 'errored';
                        v_error_message := 'not able to update phm_wam_output_1 for sn '||x.sn|| ' for date '||v_date||null||' for the batch_num ' || v_batch_num||', run_date ' ||v_run_date ||'- due to ' || sqlerrm;
                        dbms_output.put_line(v_error_message);
                        phm_algorithm_utilities_1.phm_process_audit_log(v_process_id,
                                                                        v_prod_family,
                                                                        v_process_type,
                                                                        v_routine_type,
                                                                        valgname||'1',
                                                                        v_routine_name,
                                                                        v_run_mode,
                                                                        v_process_status,
                                                                        v_error_message,
                                                                        v_run_date ,
                                                                        sysdate,
                                                                        v_batch_num ,
                                                                        v_unix_id,
                                                                        v_alg_num );
                    end;
                end if;
            end;
        end loop;

        commit;

        dbms_output.put_line('ihn done'||to_char(sysdate,'hh:mi:ss'));

        for y in cur_alg_output
        loop
            begin
            if (y.sn is not null) 
            then
                begin
                if (y.flaga = 'yes') then
                    v_flagged_pl := null;
                    v_flagged_exp_code := null;
                    phm_algorithm_utilities_1.phm_get_pl_exp_code(y.phm_patterns_sk, 
                                                                  y.pl, 
                                                                  y.ihn_level3_desc, 
                                                                  v_flagged_pl, 
                                                                  v_flagged_exp_code);
                else 
                    v_flagged_pl := null;
                    v_flagged_exp_code := null;
                end if;

                phm_algorithm_utilities_1.phm_algorithm_output_in_exp_pl(y.customer,
                                                                         y.customernumber,
                                                                         -1,
                                                                         y.sn,
                                                                         y.country,
                                                                         y.region,
                                                                         y.phm_algorithm_definitions_sk,
                                                                         y.phm_thresholds_sk,
                                                                         y.flagdate,
                                                                         null,
                                                                         y.flaga,
                                                                         y.ihn_level3_desc,
                                                                         null,
                                                                         y.created_by,
                                                                         null, 
                                                                         v_batch_num,
                                                                         y.phm_patterns_sk,
                                                                         v_run_date,
                                                                         v_process_id, 
                                                                         v_flagged_pl, 
                                                                         v_flagged_exp_code);
                exception
                when others then
                    v_process_status := 'errored';
                    v_error_message := 'not able to load date to common output table for sn '||y.sn|| ' for date '||v_date||' for thresholds_sk '|| y.phm_thresholds_sk||' for the batch_num ' || v_batch_num||', run_date ' ||v_run_date ||'- due to ' || sqlerrm;
                    phm_algorithm_utilities_1.phm_process_audit_log(v_process_id,
                                                                    v_prod_family,
                                                                    v_process_type,
                                                                    v_routine_type,
                                                                    valgname||'1',
                                                                    v_routine_name,
                                                                    v_run_mode,
                                                                    v_process_status,
                                                                    v_error_message,
                                                                    v_run_date ,
                                                                    sysdate,
                                                                    v_batch_num ,
                                                                    v_unix_id,
                                                                    v_alg_num );
                    commit;
                end;
            end if;
            end;
            v_insert_count := v_insert_count + 1;
            if mod(v_insert_count,10000) = 0 then commit; end if;
        end loop;

        commit;

        dbms_output.put_line('output done '||to_char(sysdate,'hh:mi:ss'));

        v_run_date_str := 'to_date('''||to_char(v_run_date,'ddmmyyyy')||''',''ddmmyyyy'')';
        v_pid := '.1';


        insert_string := '
            insert into 
                phm_wam_alg_chart_output 
            value
            (
                select 
                    z.customer, 
                    z.customernumber, 
                    z.device_id, 
                    z.sn, 
                    z.country, 
                    z.region,
                    '||v_alg_sk||', 
                    0, 
                    z.flagdate,
                    z.device_value, 
                    z.wzprobe,
                    null,
                    null,
                    null,
                    '''||valgname||''',
                    sysdate,
                    null,
                    z.batch_num,
                    '||v_alg_num||',
                    '||v_process_id||'
                from 
                    phm_wam_output_1 z 
                where 
                    z.batch_num = '''||v_batch_num||''' 
                and 
                    phm_algorithm_definitions_sk ='''||v_alg_sk||''' 
                and  
                    z.device_value<>0)';

        begin
            dbms_output.put_line(insert_string);
            execute immediate   insert_string;
            exception
            when others then
                dbms_output.put_line(sqlerrm);
        end;

        dbms_output.put_line('chart done '||to_char(sysdate,'hh:mi:ss'));

else  /* logging the error message if basic algorithm details not found  */
    v_error_message := 'not able to find basic details of algorithm '||v_alg_num||' dut to '||sqlerrm;
    phm_algorithm_utilities_1.phm_algorithm_runlog (v_process_id,
                                                    v_alg_num,
                                                    v_run_date,
                                                    v_batch_num,
                                                    v_error_message,
                                                    valgname);
end if;

if v_process_status <> 'errored' 
then /* updating the algorithm status to completed if not error occurs  */
    v_process_status := 'completed';
    v_error_message := '';
    phm_algorithm_utilities_1.phm_process_audit_log(v_process_id,
                                                    v_prod_family,
                                                    v_process_type,
                                                    v_routine_type,
                                                    valgname,
                                                    v_routine_name,
                                                    v_run_mode,
                                                    v_process_status,
                                                    v_error_message,
                                                    v_run_date ,
                                                    sysdate,
                                                    v_batch_num ,
                                                    v_unix_id,
                                                    v_alg_num );
end if;

commit;
exception
when others then
    v_process_status := 'errored';
    v_error_message := 'algorithm proces has failed for algorithm '||v_alg_num||' for the batch_num ' || v_batch_num||', run_date ' ||v_run_date ||'- due to ' || sqlerrm;
    phm_algorithm_utilities_1.phm_process_audit_log(v_process_id,
                                                    '',
                                                    v_process_type,
                                                    v_routine_type,
                                                    valgname,
                                                    v_routine_name,
                                                    v_run_mode,
                                                    v_process_status,
                                                    v_error_message,
                                                    v_run_date ,
                                                    sysdate,
                                                    v_batch_num ,
                                                    v_unix_id,
                                                    v_alg_num );
end phm_wam_a;

create or replace public synonym phm_wam_a for svc_phm_owner.phm_wam_a;
grant execute on  svc_phm_owner.phm_wam_a  to svc_phm_connect;
grant execute on  svc_phm_owner.phm_wam_a  to svc_phm_connect_role;

